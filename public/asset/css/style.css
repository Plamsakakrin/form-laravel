@import url("https://fonts.googleapis.com/css2?family=Sarabun:ital,wght@0,500;1,300&display=swap");
html,
body {
    margin: 20px;
    font-family: "Sarabun", sans-serif;
}
.text-header {
    font-size: 18px;
    /* font-family: 'Sarabun', sans-serif; */
}
.card-header {
    color: #fff;
    background: #db681d;
    height: 50px;
    padding: 10px !important;
}

.image-preview{
    width: 400px;
    min-height: 100px;
    /* border:2px solid #dddddd; */
    margin-top: 15px;

    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: #cccccc;
}
.image-preview__image{
    display: none;
    height: 85%;
}


.topnav-centered a {
    float: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
table {
    border-collapse: collapse;
}
/* #orangi{
    background:  hsl(24, 88%, 68%);
} */
/* table, th, td {
        border: 1px solid black;
      } */
@media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
        display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    tr {
        margin: 0 0 0.4rem 0;
    }

    tr:nth-child(odd) {
        background: #ccc;
    }

    td {
        /* Behave  like a "row" */
        border: none;
        /* border-bottom: 1px solid #eee; */
        position: relative;
        padding-left: 50%;
    }

    td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 0;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
    }

    /*
              Label the data
          You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
              */
    /* td:nth-of-type(1):before { content: "First Name"; }
              td:nth-of-type(2):before { content: "Last Name"; }
              td:nth-of-type(3):before { content: "Job Title"; }
              td:nth-of-type(4):before { content: "Favorite Color"; }
              td:nth-of-type(5):before { content: "Wars of Trek?"; } */
}
